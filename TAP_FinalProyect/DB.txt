DB: db_TAPFinalProyect
user: root
password: lirroy
host: localhost
port: 3308:3306

    --- Codigo para las tablas ---

CREATE TABLE tbl_maquinas (
    idmaquina INT PRIMARY KEY AUTO_INCREMENT,
    nombre VARCHAR(100) NOT NULL,
    descripcion TEXT,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

CREATE TABLE tbl_mecanicos (
    idmecanico INT PRIMARY KEY AUTO_INCREMENT,
    nombre VARCHAR(100) NOT NULL,
    apellidos VARCHAR(150) NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

CREATE TABLE tbl_piezas (
    idpieza INT PRIMARY KEY AUTO_INCREMENT,
    nombre VARCHAR(100) NOT NULL,
    stock INT NOT NULL,
    costo DECIMAL(10,2) NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

CREATE TABLE tbl_mantenimientos (
    idmantenimiento INT PRIMARY KEY AUTO_INCREMENT,
    fkidmaquina INT NOT NULL,
    fkidmecanico INT NOT NULL,
    fecha DATE NOT NULL,
    descripcion TEXT,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (fkidmaquina) REFERENCES tbl_maquinas(idmaquina),
    FOREIGN KEY (fkidmecanico) REFERENCES tbl_mecanicos(idmecanico)
);

CREATE TABLE tbl_detallemantenimientos (
    iddetalle INT PRIMARY KEY AUTO_INCREMENT,
    idpieza INT NOT NULL,
    idmantenimiento INT NOT NULL,
    cantidad INT NOT NULL,
    costo DECIMAL(10,2) NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (idpieza) REFERENCES tbl_piezas(idpieza),
    FOREIGN KEY (idmantenimiento) REFERENCES tbl_mantenimientos(idmantenimiento)
);

CREATE TABLE usuarios(
	idu INT AUTO_INCREMENT PRIMARY KEY, 
	nombre VARCHAR(50), 
	clave VARCHAR(255)
);

    insert into usuarios values(null, 'admin', SHA1('admin'));


    --- Procedimientos ---

DROP PROCEDURE if EXISTS validar;
CREATE PROCEDURE validar(
in _nombre VARCHAR(50),
IN _clave VARCHAR(255)
)
BEGIN
	declare x INT;
	
	SELECT COUNT(*) FROM usuarios WHERE nombre = _nombre AND clave = _clave INTO x;
	
	if X > 0 then
		SELECT 'Aceptado' AS rs;
	else
		SELECT 'Error' AS rs;
	END if;
END;

        -- Mecanicos --

DROP PROCEDURE if EXISTS p_insertar_mecanico;
CREATE PROCEDURE p_insertar_mecanico(
    _nombre VARCHAR(100),
    _apellidos VARCHAR(150)
)
BEGIN
	insert into tbl_mecanicos(nombre, apellidos) values(_nombre, _apellidos);
end;

DROP PROCEDURE if EXISTS p_editar_mecanico;
CREATE PROCEDURE p_editar_mecanico(
	_idmecanico int,
    _nombre VARCHAR(100),
    _apellidos VARCHAR(150)
)
BEGIN
	UPDATE tbl_mecanicos set nombre = _nombre, apellidos = _apellidos where idmecanico = _idmecanico;
end;

        -- Maquinas --

DROP PROCEDURE if EXISTS p_insertar_maquinas;
CREATE PROCEDURE p_insertar_maquinas(
    _nombre VARCHAR(100),
    _descripcion TEXT
)
BEGIN
	insert into tbl_maquinas(nombre, descripcion) values(_nombre, _descripcion);
end;

DROP PROCEDURE if EXISTS p_editar_maquinas;
CREATE PROCEDURE p_editar_maquinas(
    _idmaquina INT,
    _nombre VARCHAR(100),
    _descripcion TEXT
)
BEGIN
	UPDATE tbl_maquinas set nombre = _nombre, descripcion = _descripcion where idmaquina = _idmaquina;
end;