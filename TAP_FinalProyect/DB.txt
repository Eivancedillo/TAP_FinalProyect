DB: db_TAPFinalProyect
user: root
password: lirroy
host: localhost
port: 3308:3306

    --- Codigo para las tablas ---

CREATE TABLE tbl_maquinas (
    idmaquina INT PRIMARY KEY AUTO_INCREMENT,
    nombre VARCHAR(100) NOT NULL,
    descripcion TEXT,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

CREATE TABLE tbl_mecanicos (
    idmecanico INT PRIMARY KEY AUTO_INCREMENT,
    nombre VARCHAR(100) NOT NULL,
    apellidos VARCHAR(150) NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

CREATE TABLE tbl_piezas (
    idpieza INT PRIMARY KEY AUTO_INCREMENT,
    nombre VARCHAR(100) NOT NULL,
    stock INT NOT NULL,
    costo DECIMAL(10,2) NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

CREATE TABLE tbl_mantenimientos (
    idmantenimiento INT PRIMARY KEY AUTO_INCREMENT,
    fkidmaquina INT NOT NULL,
    fkidmecanico INT NOT NULL,
    fecha DATEtime NOT NULL,
    descripcion TEXT,
    estado text DEFAULT "Pendiente",
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (fkidmaquina) REFERENCES tbl_maquinas(idmaquina),
    FOREIGN KEY (fkidmecanico) REFERENCES tbl_mecanicos(idmecanico)
);

CREATE TABLE tbl_detallemantenimientos (
    iddetalle INT PRIMARY KEY AUTO_INCREMENT,
    idpieza INT NOT NULL,
    idmantenimiento INT NOT NULL,
    cantidad INT NOT NULL,
    costo DECIMAL(10,2) NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (idpieza) REFERENCES tbl_piezas(idpieza),
    FOREIGN KEY (idmantenimiento) REFERENCES tbl_mantenimientos(idmantenimiento)
);

CREATE TABLE usuarios(
	idu INT AUTO_INCREMENT PRIMARY KEY, 
	nombre VARCHAR(50), 
	clave VARCHAR(255)
);

insert into usuarios values(null, 'admin', SHA1('admin'));

create table tbl_mecanicosmantenimientos(
	idmecanicomantenimiento int PRIMARY key auto_increment,
	fkidmantenimiento int,
	fkidmecanico int,
	created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
	FOREIGN key(fkidmecanico) REFERENCES tbl_mecanicos(idmecanico),
	FOREIGN key(fkidmantenimiento) REFERENCES tbl_mantenimientos(idmantenimiento)
);

    --- Procedimientos ---

DROP PROCEDURE if EXISTS validar;
CREATE PROCEDURE validar(
in _nombre VARCHAR(50),
IN _clave VARCHAR(255)
)
BEGIN
	declare x INT;
	
	SELECT COUNT(*) FROM usuarios WHERE nombre = _nombre AND clave = _clave INTO x;
	
	if X > 0 then
		SELECT 'Aceptado' AS rs;
	else
		SELECT 'Error' AS rs;
	END if;
END;

        -- Mecanicos --

DROP PROCEDURE if EXISTS p_insertar_mecanico;
CREATE PROCEDURE p_insertar_mecanico(
    _nombre VARCHAR(100),
    _apellidos VARCHAR(150)
)
BEGIN
	insert into tbl_mecanicos(nombre, apellidos) values(_nombre, _apellidos);
end;

DROP PROCEDURE if EXISTS p_editar_mecanico;
CREATE PROCEDURE p_editar_mecanico(
	_idmecanico int,
    _nombre VARCHAR(100),
    _apellidos VARCHAR(150)
)
BEGIN
	UPDATE tbl_mecanicos set nombre = _nombre, apellidos = _apellidos where idmecanico = _idmecanico;
end;

        -- Maquinas --

DROP PROCEDURE if EXISTS p_insertar_maquinas;
CREATE PROCEDURE p_insertar_maquinas(
    _nombre VARCHAR(100),
    _descripcion TEXT
)
BEGIN
	insert into tbl_maquinas(nombre, descripcion) values(_nombre, _descripcion);
end;

DROP PROCEDURE if EXISTS p_editar_maquinas;
CREATE PROCEDURE p_editar_maquinas(
    _idmaquina INT,
    _nombre VARCHAR(100),
    _descripcion TEXT
)
BEGIN
	UPDATE tbl_maquinas set nombre = _nombre, descripcion = _descripcion where idmaquina = _idmaquina;
end;

        -- Piezas --

DROP PROCEDURE if EXISTS p_insertar_piezas;
CREATE PROCEDURE p_insertar_piezas(
    _nombre VARCHAR(100),
    _stock INT,
    _costo DECIMAL(10,2)
)
BEGIN
	insert into tbl_piezas(nombre, stock, costo) values(_nombre, _stock, _costo);
end;

DROP PROCEDURE if EXISTS p_editar_piezas;
CREATE PROCEDURE p_editar_piezas(
    _idpieza INT,
    _nombre VARCHAR(100),
    _stock INT,
    _costo DECIMAL(10,2)
)
BEGIN
	UPDATE tbl_piezas set nombre = _nombre, stock = _stock, costo = _costo where idpieza = _idpieza;
end;

DROP PROCEDURE if EXISTS p_actualizar_stock;
CREATE PROCEDURE p_actualizar_stock(
	_idpieza INT,
	_cantidad INT
)
BEGIN
	update tbl_piezas set stock = stock - _cantidad where idpieza = _idpieza;
end;

        -- Mantenimientos --

DROP PROCEDURE if EXISTS p_insertar_mantenimientos;
CREATE PROCEDURE p_insertar_mantenimientos(
    _fkidmaquina INT,
    _fkidmecanico INT,
    _fecha DATE,
    _descripcion TEXT
)
BEGIN
	insert into tbl_mantenimientos(fkidmaquina, fkidmecanico, fecha, descripcion) 
	values(_fkidmaquina, _fkidmecanico, _fecha, _descripcion);
end;

DROP PROCEDURE if EXISTS p_editar_mantenimientos;
CREATE PROCEDURE p_editar_mantenimientos(
	_idmantenimiento INT,
    _fkidmaquina INT,
    _fkidmecanico INT,
    _fecha DATE,
    _descripcion TEXT
)
BEGIN
	UPDATE tbl_mantenimientos set idmantenimiento = _idmantenimiento, fkidmaquina = _fkidmaquina, 
	fkidmecanico = _fkidmecanico, fecha = _fecha, descripcion = _descripcion
	where idmantenimiento = _idmantenimiento;
end;

DROP PROCEDURE if EXISTS p_editar_mantenimientos_estado;
CREATE PROCEDURE p_editar_mantenimientos_estado(
	_idmantenimiento INT,
	_estado varchar(10)
)
BEGIN
	UPDATE tbl_mantenimientos set estado = _estado where idmantenimiento = _idmantenimiento;
end;

        -- Detalles Mantenimientos --

DROP PROCEDURE if EXISTS p_insertar_detallesmantenimiento;
CREATE PROCEDURE p_insertar_detallesmantenimiento(
    _idpieza INT,
    _idmantenimiento INT,
    _cantidad INT,
    _costo DECIMAL(10,2)
)
BEGIN
	insert into tbl_detallemantenimientos(idpieza, idmantenimiento, cantidad, costo) 
	values(_idpieza, _idmantenimiento, _cantidad, _costo);
end;

DROP PROCEDURE if EXISTS p_editar_detallesmantenimiento;
CREATE PROCEDURE p_editar_detallesmantenimiento(
	_iddetalle INT,
    _cantidad INT,
    _costo DECIMAL(10,2)
)
BEGIN
	update tbl_detallemantenimientos set cantidad = _cantidad, costo = _costo 
	where iddetalle = _iddetalle;
end;

DROP PROCEDURE if EXISTS p_insertar_detallematenimientomecanico;
CREATE PROCEDURE p_insertar_detallematenimientomecanico(
	_fkidmantenimiento int,
	_fkidmecanico int
)
BEGIN
	insert into tbl_mecanicosmantenimientos(fkidmantenimiento, fkidmecanico) 
	values(_fkidmantenimiento, _fkidmecanico);
end;

    -- Vistas --

drop VIEW if EXISTS v_mantenimientos;
create VIEW v_mantenimientos as
SELECT ma.idmantenimiento idmantenimiento, ma.fkidmaquina idmaquina ,maq.nombre Maquina, 
ma.fkidmecanico idmecanico ,me.nombre Mecanico, ma.fecha Fecha, ma.descripcion Descripcion, 
ma.estado Estado 
FROM  tbl_mantenimientos ma 
JOIN tbl_mecanicos me ON ma.fkidmecanico = me.idmecanico
JOIN tbl_maquinas maq ON ma.fkidmaquina = maq.idmaquina;

drop VIEW if EXISTS v_mecanicos;
create VIEW v_mecanicos as
select m.idmecanico idmecanico, m.nombre nombre from tbl_mecanicos m;

drop VIEW if EXISTS v_ultimomantenimiento;
create VIEW v_ultimomantenimiento as
select COALESCE(max(idmantenimiento), 0) as id from tbl_mantenimientos;

drop VIEW if EXISTS v_piezasdisponibles;
create VIEW v_piezasdisponibles as
select p.idpieza idpieza, p.nombre Nombre, p.costo Costo, p.stock as 'Stock restante' from tbl_piezas p;

drop VIEW if EXISTS v_piezasusadas;
create VIEW v_piezasusadas as
select d.idmantenimiento idmantenimiento ,d.iddetalle iddetalle,d.idpieza idpieza, p.nombre Nombre, 
d.cantidad Cantidad, d.costo Costo, 
(d.cantidad*d.costo) as Total
from tbl_detallemantenimientos d 
JOIN tbl_piezas p ON d.idpieza = p.idpieza;

drop VIEW if EXISTS v_mecanicosusados;
create VIEW v_mecanicosusados as
select m.idmecanicomantenimiento idmecanicomantenimiento,m.fkidmantenimiento 
fkidmantenimiento,m.fkidmecanico fkidmecanico,me.nombre Nombre  
from tbl_mecanicosmantenimientos m
JOIN tbl_mecanicos me ON m.fkidmecanico = me.idmecanico;