<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="BtnExcel.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAYABgAAD/2wBDAAMCAgICAgMCAgIDAwMDBAYEBAQEBAgGBgUGCQgKCgkICQkK
        DA8MCgsOCwkJDRENDg8QEBEQCgwSExIQEw8QEBD/2wBDAQMDAwQDBAgEBAgQCwkLEBAQEBAQEBAQEBAQ
        EBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBD/wAARCABkAGQDASIAAhEBAxEB/8QA
        HwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIh
        MUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVW
        V1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXG
        x8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQF
        BgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAV
        YnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOE
        hYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq
        8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD9U6K/HTwJ+11/wU0/bO1vX7T9n2XStJ03SJImv49Ng0+3Swiu
        DJ5Aee9LSsSIpOYzn5CcCu0/4dq/t2/GE+b8ev2rBDa3H37U6xf6qY1PUeQfKgH0VsUAfor43/aF+BHw
        2Ei+PPjF4N0KWIkNBe61bxz5HYRbt5PsATXz943/AOCsP7GPhBZF03xtrHiqeLIMOiaLOcn0D3Ahjb6h
        iPevLfA//BFH4F6T5cvj74o+MfEcqYLJYpb6bA591KzPj6OD719AeCv+CcX7F/gYxS2HwP0rU548Ey63
        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
        GOSigD9EKKKKACiiigAooooA/9k=
</value>
  </data>
</root>